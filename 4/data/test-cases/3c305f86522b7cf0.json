{
  "uid" : "3c305f86522b7cf0",
  "name" : "test_tc01_fill_form",
  "fullName" : "test_kapcsolat#test_tc01_fill_form",
  "historyId" : "04802faf79aaa6ad84e3b45aa64608b8",
  "time" : {
    "start" : 1648461576205,
    "stop" : 1648461600532,
    "duration" : 24327
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"textarea\"}\n  (Session info: headless chrome=98.0.4758.102)\nStacktrace:\n#0 0x55ebf2c6eb33 <unknown>\n#1 0x55ebf27376d8 <unknown>\n#2 0x55ebf276d6f1 <unknown>\n#3 0x55ebf276d8b1 <unknown>\n#4 0x55ebf27a0574 <unknown>\n#5 0x55ebf278b08d <unknown>\n#6 0x55ebf279e2fb <unknown>\n#7 0x55ebf278af53 <unknown>\n#8 0x55ebf2760a0a <unknown>\n#9 0x55ebf2761ad5 <unknown>\n#10 0x55ebf2ca02fd <unknown>\n#11 0x55ebf2cb94bb <unknown>\n#12 0x55ebf2ca20d5 <unknown>\n#13 0x55ebf2cba145 <unknown>\n#14 0x55ebf2c95aaf <unknown>\n#15 0x55ebf2cd6ba8 <unknown>\n#16 0x55ebf2cd6d28 <unknown>\n#17 0x55ebf2cf148d <unknown>\n#18 0x7f44689d6609 <unknown>",
  "statusTrace" : "def test_tc01_fill_form():\n        form = ContactForm()\n        field_list = form.locators_tag_name(form.input_fields_tag_name)\n        # make a full list, with textarea\n>       field_list.insert(4, form.locator_by_name(form.text_area_tag_name))\n\ntest_kapcsolat.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_kapcsolat.py:29: in locator_by_name\n    element = self.driver.find_element(By.TAG_NAME, tag)\n/opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:1248: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd627d618d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55ebf2cd6d28 \\\\u003Cunknown>\\\\n#17 0x55ebf2cf148d \\\\u003Cunknown>\\\\n#18 0x7f44689d6609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"textarea\"}\nE         (Session info: headless chrome=98.0.4758.102)\nE       Stacktrace:\nE       #0 0x55ebf2c6eb33 <unknown>\nE       #1 0x55ebf27376d8 <unknown>\nE       #2 0x55ebf276d6f1 <unknown>\nE       #3 0x55ebf276d8b1 <unknown>\nE       #4 0x55ebf27a0574 <unknown>\nE       #5 0x55ebf278b08d <unknown>\nE       #6 0x55ebf279e2fb <unknown>\nE       #7 0x55ebf278af53 <unknown>\nE       #8 0x55ebf2760a0a <unknown>\nE       #9 0x55ebf2761ad5 <unknown>\nE       #10 0x55ebf2ca02fd <unknown>\nE       #11 0x55ebf2cb94bb <unknown>\nE       #12 0x55ebf2ca20d5 <unknown>\nE       #13 0x55ebf2cba145 <unknown>\nE       #14 0x55ebf2c95aaf <unknown>\nE       #15 0x55ebf2cd6ba8 <unknown>\nE       #16 0x55ebf2cd6d28 <unknown>\nE       #17 0x55ebf2cf148d <unknown>\nE       #18 0x7f44689d6609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"textarea\"}\n  (Session info: headless chrome=98.0.4758.102)\nStacktrace:\n#0 0x55ebf2c6eb33 <unknown>\n#1 0x55ebf27376d8 <unknown>\n#2 0x55ebf276d6f1 <unknown>\n#3 0x55ebf276d8b1 <unknown>\n#4 0x55ebf27a0574 <unknown>\n#5 0x55ebf278b08d <unknown>\n#6 0x55ebf279e2fb <unknown>\n#7 0x55ebf278af53 <unknown>\n#8 0x55ebf2760a0a <unknown>\n#9 0x55ebf2761ad5 <unknown>\n#10 0x55ebf2ca02fd <unknown>\n#11 0x55ebf2cb94bb <unknown>\n#12 0x55ebf2ca20d5 <unknown>\n#13 0x55ebf2cba145 <unknown>\n#14 0x55ebf2c95aaf <unknown>\n#15 0x55ebf2cd6ba8 <unknown>\n#16 0x55ebf2cd6d28 <unknown>\n#17 0x55ebf2cf148d <unknown>\n#18 0x7f44689d6609 <unknown>",
    "statusTrace" : "def test_tc01_fill_form():\n        form = ContactForm()\n        field_list = form.locators_tag_name(form.input_fields_tag_name)\n        # make a full list, with textarea\n>       field_list.insert(4, form.locator_by_name(form.text_area_tag_name))\n\ntest_kapcsolat.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_kapcsolat.py:29: in locator_by_name\n    element = self.driver.find_element(By.TAG_NAME, tag)\n/opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:1248: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd627d618d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55ebf2cd6d28 \\\\u003Cunknown>\\\\n#17 0x55ebf2cf148d \\\\u003Cunknown>\\\\n#18 0x7f44689d6609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"textarea\"}\nE         (Session info: headless chrome=98.0.4758.102)\nE       Stacktrace:\nE       #0 0x55ebf2c6eb33 <unknown>\nE       #1 0x55ebf27376d8 <unknown>\nE       #2 0x55ebf276d6f1 <unknown>\nE       #3 0x55ebf276d8b1 <unknown>\nE       #4 0x55ebf27a0574 <unknown>\nE       #5 0x55ebf278b08d <unknown>\nE       #6 0x55ebf279e2fb <unknown>\nE       #7 0x55ebf278af53 <unknown>\nE       #8 0x55ebf2760a0a <unknown>\nE       #9 0x55ebf2761ad5 <unknown>\nE       #10 0x55ebf2ca02fd <unknown>\nE       #11 0x55ebf2cb94bb <unknown>\nE       #12 0x55ebf2ca20d5 <unknown>\nE       #13 0x55ebf2cba145 <unknown>\nE       #14 0x55ebf2c95aaf <unknown>\nE       #15 0x55ebf2cd6ba8 <unknown>\nE       #16 0x55ebf2cd6d28 <unknown>\nE       #17 0x55ebf2cf148d <unknown>\nE       #18 0x7f44689d6609 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f5221a0c2a1cc5df",
      "name" : "log",
      "source" : "f5221a0c2a1cc5df.txt",
      "type" : "text/plain",
      "size" : 587
    }, {
      "uid" : "16503a4996c348e4",
      "name" : "stderr",
      "source" : "16503a4996c348e4.txt",
      "type" : "text/plain",
      "size" : 406
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_kapcsolat"
  }, {
    "name" : "host",
    "value" : "fv-az170-611"
  }, {
    "name" : "thread",
    "value" : "2319-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_kapcsolat"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3c305f86522b7cf0.json",
  "parameterValues" : [ ]
}